require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '12.4'
install! 'cocoapods', :deterministic_uuids => false

# Setup permissions for the app
# setup_permissions([
#   'Camera',
#   'Microphone',
#   'PhotoLibrary',
#   'SpeechRecognition',
# ])

production = ENV["PRODUCTION"] == "1"

target 'RNBotsSDK' do
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    #:production => production,
    ##:hermes_enabled => flags[:hermes_enabled],
    #:fabric_enabled => flags[:fabric_enabled],
    :flipper_configuration => FlipperConfiguration.disabled,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  

  target 'RNBotsSDKTests' do
    inherit! :complete
    # Pods for testing
  end

  pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec', :modular_headers => false
  pod 'RNVectorIcons', :path => '../node_modules/react-native-vector-icons'
  #pod 'react-native-permissions', :path => '../node_modules/react-native-permissions'
  
  permissions_path = '../node_modules/react-native-permissions/ios'

pod 'Permission-Camera', :path => "#{permissions_path}/Camera"
pod 'Permission-LocationWhenInUse', :path => "#{permissions_path}/LocationWhenInUse"
pod 'Permission-Microphone', :path => "#{permissions_path}/Microphone"
pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary"



  post_install do |installer|
    react_native_post_install(installer)

    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.4'
      end
    end
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end
end

